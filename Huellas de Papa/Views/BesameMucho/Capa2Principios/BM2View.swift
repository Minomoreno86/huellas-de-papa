import SwiftUI

/// Vista principal de la Capa 2 (Principios) del m√≥dulo B√©same Mucho
/// Presenta los 12 principios fundamentales de la crianza con apego seg√∫n Carlos Gonz√°lez
struct BM2View: View {
    @State private var selectedBlock: PrincipleBlock? = nil
    
    var body: some View {
        ScrollView {
            VStack(spacing: 32) {
                // 1. Header
                headerSection
                
                // 2. Filtro por bloques
                blockFilterSection
                
                // 3. Grid de principios
                principlesGridSection
                
                // 4. Escenarios pr√°cticos
                scenariosSection
                
                // 5. Ideas clave
                keyIdeasSection
                
                // 6. Frase final
                motivationalQuoteSection
            }
            .padding()
        }
        .background(Color(.systemGroupedBackground))
        .navigationTitle("Principios")
        .navigationBarTitleDisplayMode(.large)
    }
    
    // MARK: - 1. Header Section
    private var headerSection: some View {
        VStack(spacing: 16) {
            Text("12 Principios Fundamentales")
                .font(.largeTitle)
                .fontWeight(.bold)
                .foregroundStyle(
                    LinearGradient(
                        gradient: Gradient(colors: [.blue, .mint]),
                        startPoint: .leading,
                        endPoint: .trailing
                    )
                )
            
            Text("Comprendiendo por qu√© los ni√±os se comportan como lo hacen")
                .font(.title3)
                .fontWeight(.medium)
                .foregroundColor(.secondary)
                .multilineTextAlignment(.center)
            
            Text("Basado en ciencia, biolog√≠a y respeto")
                .font(.subheadline)
                .foregroundColor(.blue)
                .italic()
        }
        .padding(.vertical)
    }
    
    // MARK: - 2. Block Filter Section
    private var blockFilterSection: some View {
        VStack(alignment: .leading, spacing: 12) {
            Text("Bloques Tem√°ticos")
                .font(.headline)
                .foregroundColor(.primary)
            
            ScrollView(.horizontal, showsIndicators: false) {
                HStack(spacing: 12) {
                    // Bot√≥n "Todos"
                    Button(action: {
                        triggerHaptic()
                        withAnimation(.spring(response: 0.3, dampingFraction: 0.7)) {
                            selectedBlock = nil
                        }
                    }) {
                        Text("Todos")
                            .font(.subheadline)
                            .fontWeight(.medium)
                            .foregroundColor(selectedBlock == nil ? .white : .blue)
                            .padding(.horizontal, 16)
                            .padding(.vertical, 8)
                            .background(
                                Capsule()
                                    .fill(selectedBlock == nil ? Color.blue : Color.blue.opacity(0.1))
                            )
                    }
                    
                    ForEach([PrincipleBlock.biologicalNeeds, .communicationResponse, .developmentAutonomy, .respectfulParenting], id: \.self) { block in
                        Button(action: {
                            triggerHaptic()
                            withAnimation(.spring(response: 0.3, dampingFraction: 0.7)) {
                                selectedBlock = block
                            }
                        }) {
                            HStack(spacing: 6) {
                                Image(systemName: block.icon)
                                Text(block.rawValue)
                            }
                            .font(.subheadline)
                            .fontWeight(.medium)
                            .foregroundColor(selectedBlock == block ? .white : colorForBlock(block))
                            .padding(.horizontal, 16)
                            .padding(.vertical, 8)
                            .background(
                                Capsule()
                                    .fill(selectedBlock == block ? colorForBlock(block) : colorForBlock(block).opacity(0.1))
                            )
                        }
                    }
                }
                .padding(.horizontal, 4)
            }
        }
    }
    
    // MARK: - 3. Principles Grid Section
    private var principlesGridSection: some View {
        VStack(alignment: .leading, spacing: 16) {
            Text("Los 12 Principios")
                .font(.title2)
                .fontWeight(.semibold)
                .foregroundColor(.primary)
            
            LazyVGrid(columns: [GridItem(.flexible())], spacing: 16) {
                ForEach(filteredPrinciples) { principle in
                    BM2PrincipleCard(principle: principle)
                }
            }
        }
    }
    
    // MARK: - 4. Scenarios Section
    private var scenariosSection: some View {
        VStack(alignment: .leading, spacing: 16) {
            Text("Aplicaci√≥n en Situaciones Reales")
                .font(.title2)
                .fontWeight(.semibold)
                .foregroundColor(.primary)
            
            ScrollView(.horizontal, showsIndicators: false) {
                HStack(spacing: 16) {
                    ForEach(practicalScenarios) { scenario in
                        BM2ScenarioCard(scenario: scenario)
                    }
                }
                .padding(.horizontal, 4)
            }
        }
    }
    
    // MARK: - 5. Key Ideas Section
    private var keyIdeasSection: some View {
        VStack(alignment: .leading, spacing: 16) {
            Text("Ideas Clave para Recordar")
                .font(.title2)
                .fontWeight(.semibold)
                .foregroundColor(.primary)
            
            VStack(spacing: 12) {
                ForEach(keyIdeas) { idea in
                    HStack(alignment: .top, spacing: 12) {
                        Image(systemName: "quote.bubble.fill")
                            .foregroundColor(.blue)
                            .font(.title3)
                        
                        VStack(alignment: .leading, spacing: 6) {
                            Text(idea.quote)
                                .font(.body)
                                .fontWeight(.semibold)
                                .foregroundColor(.primary)
                                .italic()
                            
                            Text(idea.context)
                                .font(.caption)
                                .foregroundColor(.secondary)
                        }
                    }
                    .padding()
                    .background(
                        RoundedRectangle(cornerRadius: 12)
                            .fill(Color(.systemBackground))
                            .shadow(color: Color.blue.opacity(0.1), radius: 4, x: 0, y: 2)
                    )
                }
            }
        }
    }
    
    // MARK: - 6. Motivational Quote Section
    private var motivationalQuoteSection: some View {
        VStack(spacing: 20) {
            Text("üíô Mensaje Final")
                .font(.headline)
                .fontWeight(.semibold)
                .foregroundColor(.primary)
            
            VStack(spacing: 12) {
                Text("\"Los d√≠as m√°s felices de tu hijo dependen de ti. Dale todo el amor que puedas, porque el amor nunca sobra.\"")
                    .font(.title3)
                    .fontWeight(.medium)
                    .foregroundColor(.primary)
                    .multilineTextAlignment(.center)
                    .italic()
                
                Text("‚Äî Carlos Gonz√°lez")
                    .font(.subheadline)
                    .foregroundColor(.secondary)
            }
            .padding(.vertical, 24)
            .padding(.horizontal, 20)
            .background(
                RoundedRectangle(cornerRadius: 16)
                    .fill(
                        LinearGradient(
                            gradient: Gradient(colors: [
                                Color.blue.opacity(0.1),
                                Color.mint.opacity(0.05)
                            ]),
                            startPoint: .topLeading,
                            endPoint: .bottomTrailing
                        )
                    )
                    .overlay(
                        RoundedRectangle(cornerRadius: 16)
                            .stroke(
                                LinearGradient(
                                    gradient: Gradient(colors: [
                                        Color.blue.opacity(0.3),
                                        Color.mint.opacity(0.2)
                                    ]),
                                    startPoint: .topLeading,
                                    endPoint: .bottomTrailing
                                ),
                                lineWidth: 1
                            )
                    )
            )
            .shadow(color: Color.blue.opacity(0.1), radius: 8, x: 0, y: 4)
        }
    }
    
    // MARK: - Computed Properties
    private var filteredPrinciples: [BM2Principle] {
        if let selectedBlock = selectedBlock {
            return allPrinciples.filter { $0.block == selectedBlock }
        }
        return allPrinciples
    }
    
    // MARK: - Data
    private var allPrinciples: [BM2Principle] {
        [
            // BLOQUE 1: Necesidades Biol√≥gicas (1-4)
            BM2Principle(
                number: 1,
                title: "Por Qu√© No Quieren Quedarse Solos",
                concept: "La angustia de separaci√≥n es protectora, no manipulaci√≥n",
                explanation: "Los beb√©s humanos est√°n programados evolutivamente para necesitar contacto constante. En la naturaleza, un beb√© solo es un beb√© muerto. La angustia que sienten al quedarse solos no es capricho ni manipulaci√≥n: es su sistema de alarma biol√≥gico funcionando correctamente. Los beb√©s que lloraban cuando se quedaban solos alertaban a sus madres y sobreviv√≠an.",
                practicalApplication: "Responde a su necesidad de cercan√≠a sin culpa. No es que 'se acostumbre mal', es que necesita tu presencia para sentirse seguro.",
                scientificBasis: "La angustia de separaci√≥n es una respuesta normal y saludable que aparece alrededor de los 8 meses y es se√±al de apego seguro.",
                block: .biologicalNeeds
            ),
            BM2Principle(
                number: 2,
                title: "Por Qu√© Siempre Quieren Brazos",
                concept: "El porteo continuo es nuestra biolog√≠a",
                explanation: "Los beb√©s humanos nacen esperando ser portados constantemente, como los simios. No para quedarse solos en cunas. Su reflejo de agarre (heredado de cuando nos agarr√°bamos del pelo de nuestras madres), su llanto ante la separaci√≥n, su necesidad de contacto, son adaptaciones evolutivas. Somos primates portadores.",
                practicalApplication: "Usa portabeb√©s, da brazos sin l√≠mite. No se va a malcriar. Sus brazos son su h√°bitat natural.",
                scientificBasis: "El contacto f√≠sico regula la temperatura, el ritmo card√≠aco y las emociones del beb√©. Es una necesidad biol√≥gica, no un lujo.",
                block: .biologicalNeeds
            ),
            BM2Principle(
                number: 3,
                title: "Por Qu√© No Quieren Dormir Solos",
                concept: "El colecho es natural y seguro",
                explanation: "Dormir solos es antinatural para mam√≠feros. Los beb√©s necesitan la cercan√≠a nocturna por seguridad, regulaci√≥n t√©rmica y facilitar la lactancia. El colecho ha sido la norma en la humanidad durante 200,000 a√±os. Las cunas en habitaciones separadas son un invento reciente y occidental.",
                practicalApplication: "El colecho es una opci√≥n v√°lida, no un problema. Practicado con seguridad (sin alcohol, drogas, sof√°s) es beneficioso.",
                scientificBasis: "El colecho facilita la lactancia nocturna, sincroniza los ciclos de sue√±o madre-beb√© y reduce el estr√©s del beb√©.",
                block: .biologicalNeeds
            ),
            BM2Principle(
                number: 4,
                title: "Por Qu√© Llaman Nuestra Atenci√≥n",
                concept: "Llamar la atenci√≥n es supervivencia, no manipulaci√≥n",
                explanation: "Los beb√©s NECESITAN atenci√≥n constante para sobrevivir. No pueden alimentarse, moverse, regular su temperatura ni defenderse solos. Llamar la atenci√≥n de sus cuidadores es su instinto de supervivencia, no un capricho. Los beb√©s que 'llamaban mucho la atenci√≥n' eran los que sobreviv√≠an.",
                practicalApplication: "Responde a sus llamadas, no ignores su necesidad. Tu respuesta le ense√±a que el mundo es seguro y que puede confiar.",
                scientificBasis: "Los beb√©s ignorados sufren estr√©s t√≥xico que afecta el desarrollo cerebral. La respuesta consistente crea apego seguro.",
                block: .biologicalNeeds
            ),
            
            // BLOQUE 2: Comunicaci√≥n y Respuesta (5-7)
            BM2Principle(
                number: 5,
                title: "El Llanto Es Comunicaci√≥n",
                concept: "El llanto es su √∫nica forma de hablar",
                explanation: "El llanto es la √∫nica herramienta de comunicaci√≥n del beb√©. No es manipulaci√≥n, es necesidad real. Los beb√©s que lloraban cuando se separaban de sus madres o ten√≠an hambre eran los que sobreviv√≠an. Por selecci√≥n natural, TODOS descendemos de beb√©s que lloraban intensamente.",
                practicalApplication: "Responde siempre al llanto. Tu beb√© no sabe 'manipular', solo sabe comunicar que te necesita.",
                scientificBasis: "Ignorar el llanto genera cortisol (hormona del estr√©s) que en niveles altos y prolongados da√±a el cerebro en desarrollo.",
                block: .communicationResponse
            ),
            BM2Principle(
                number: 6,
                title: "La Respuesta a la Separaci√≥n",
                concept: "La angustia al separarse es se√±al de salud",
                explanation: "Los ni√±os con apego seguro lloran cuando sus padres se van. Los que NO lloran pueden tener problemas de apego. La angustia de separaci√≥n no es un problema a resolver, es una se√±al de que el v√≠nculo es sano. El ni√±o que llora est√° diciendo 'te necesito, no te vayas'.",
                practicalApplication: "Despedidas cari√±osas, no huidas r√°pidas. Valida su emoci√≥n: 'S√© que es dif√≠cil, voy a volver'.",
                scientificBasis: "La angustia de separaci√≥n es un indicador de v√≠nculo sano. Los ni√±os con apego inseguro pueden no mostrar angustia (se han resignado).",
                block: .communicationResponse
            ),
            BM2Principle(
                number: 7,
                title: "Contra el Llanto Terap√©utico",
                concept: "Dejar llorar NO es terap√©utico, es abandono",
                explanation: "Los m√©todos para 'ense√±ar a dormir' dejando llorar al beb√© son crueles y contraproducentes. El beb√© no 'aprende' a dormir, se RESIGNA porque nadie viene. Genera trauma, no aprendizaje. El silencio no significa que est√© bien, significa que ha perdido la esperanza de que alguien responda.",
                practicalApplication: "Nunca dejes llorar a tu beb√© solo. Si llora, es porque te necesita.",
                scientificBasis: "El llanto prolongado sin respuesta genera niveles t√≥xicos de cortisol que da√±an el hipocampo (memoria y aprendizaje).",
                block: .communicationResponse
            ),
            
            // BLOQUE 3: Desarrollo y Autonom√≠a (8-10)
            BM2Principle(
                number: 8,
                title: "Cu√°ndo Se Har√° Independiente",
                concept: "La independencia es resultado del apego, no de la separaci√≥n",
                explanation: "Parad√≥jicamente, los ni√±os m√°s 'dependidos' (con apego seguro) se vuelven M√ÅS independientes. Los separados prematuramente quedan inseguros y dependientes emocionalmente toda su vida. La independencia no se ense√±a forzando separaciones, se CONSIGUE dando todo el apego que el ni√±o necesita.",
                practicalApplication: "Cada ni√±o tiene su ritmo para dejar el pecho, dormir solo, etc. No lo forces. Llegar√° cuando est√© preparado.",
                scientificBasis: "El apego seguro (conseguido con respuesta y cercan√≠a) es la base de la autonom√≠a futura y la salud mental.",
                block: .developmentAutonomy
            ),
            BM2Principle(
                number: 9,
                title: "Control de Esf√≠nteres sin Presi√≥n",
                concept: "El control de esf√≠nteres no se ense√±a, se espera",
                explanation: "Forzar el control de esf√≠nteres antes de que el ni√±o est√© maduro neurol√≥gicamente causa problemas (infecciones, estre√±imiento, enuresis). Cada ni√±o controla a su tiempo, entre los 2 y 4 a√±os generalmente. No hay prisa. Los pa√±ales no son un problema, la presi√≥n s√≠ lo es.",
                practicalApplication: "Espera las se√±ales de madurez (avisa cuando est√° mojado, pide el ba√±o), no impongas fechas arbitrarias.",
                scientificBasis: "El control de esf√≠nteres requiere madurez neurol√≥gica de los nervios que controlan la vejiga y el intestino. No se puede acelerar.",
                block: .developmentAutonomy
            ),
            BM2Principle(
                number: 10,
                title: "Respeto a Sus Ritmos Naturales",
                concept: "Cada ni√±o es √∫nico, no hay normas universales",
                explanation: "Dejar el pecho, dormir solo, caminar, hablar, controlar esf√≠nteres... todo tiene su momento para cada ni√±o. Comparar y presionar solo genera estr√©s. Los hitos del desarrollo tienen rangos amplios de normalidad. Tu hijo no est√° 'atrasado', est√° en SU tiempo.",
                practicalApplication: "No compares con otros ni√±os. Respeta su ritmo individual. Llegar√° a todo cuando est√© preparado.",
                scientificBasis: "El desarrollo es un proceso biol√≥gico que sigue su curso. No se puede acelerar, solo se puede respetar o entorpecer.",
                block: .developmentAutonomy
            ),
            
            // BLOQUE 4: Crianza Respetuosa (11-12)
            BM2Principle(
                number: 11,
                title: "Su Hijo Es Buena Persona",
                concept: "Los ni√±os nacen buenos, no hay que domarlos",
                explanation: "Los ni√±os son naturalmente: desinteresados (comparten), generosos (dan), ecu√°nimes (perdonan), valientes (afrontan miedos), sinceros (dicen la verdad), sociables (buscan compa√±√≠a), comprensivos (entienden). No necesitan ser domados ni disciplinados duramente. Necesitan ser AMADOS y GUIADOS con respeto.",
                practicalApplication: "Conf√≠a en la bondad natural de tu hijo. No es tu enemigo, es tu aliado.",
                scientificBasis: "La empat√≠a y la cooperaci√≥n son innatas en humanos. Los beb√©s de 18 meses ya muestran conductas altruistas.",
                block: .respectfulParenting
            ),
            BM2Principle(
                number: 12,
                title: "Contra el Castigo y la Violencia",
                concept: "Ni una bofetada, ni un castigo",
                explanation: "El castigo f√≠sico y emocional (bofetadas, azotes, gritos, humillaciones) da√±a el v√≠nculo, la autoestima y ense√±a que la violencia es aceptable. Los ni√±os educados con violencia aprenden violencia. NO funciona para educar, solo para dominar mediante el miedo. Existen alternativas respetuosas.",
                practicalApplication: "Educa con amor y l√≠mites respetuosos, nunca con dolor. Los l√≠mites pueden ser firmes sin ser violentos.",
                scientificBasis: "El castigo f√≠sico se asocia con peor salud mental, mayor agresividad y problemas de conducta a largo plazo.",
                block: .respectfulParenting
            )
        ]
    }
    
    private var practicalScenarios: [BM2Scenario] {
        [
            BM2Scenario(
                principleNumber: 1,
                situation: "No quiere quedarse solo ni un segundo",
                commonMistake: "\"Tiene que acostumbrarse. D√©jalo solo un rato, que llore si quiere. As√≠ aprender√°.\"",
                besameMuchoResponse: "\"Es normal que no quiera estar solo. Es su instinto de supervivencia. Ll√©va¬≠lo contigo cuando puedas, o d√©jale algo tuyo (una prenda que huela a ti).\"",
                expectedOutcome: "Beb√© que conf√≠a en que sus necesidades ser√°n atendidas. Menor ansiedad a largo plazo."
            ),
            BM2Scenario(
                principleNumber: 2,
                situation: "Pide brazos constantemente, no puedo hacer nada",
                commonMistake: "\"Lo est√°s malcriando. Si sigues cogi√©ndolo tanto, nunca se va a despegar de ti.\"",
                besameMuchoResponse: "\"Usa un portabeb√©s. As√≠ tiene el contacto que necesita y t√∫ tienes las manos libres. No se malcr√≠a, se cr√≠a.\"",
                expectedOutcome: "Beb√© seguro y regulado. Madre con movilidad. V√≠nculo fortalecido."
            ),
            BM2Scenario(
                principleNumber: 3,
                situation: "No duerme en su cuna, solo conmigo",
                commonMistake: "\"Tiene que dormir en su cuna desde el principio o nunca saldr√° de tu cama. Es un mal h√°bito.\"",
                besameMuchoResponse: "\"El colecho es normal y saludable. Duerme donde todos duerman mejor. Ya dormir√° solo cuando est√© preparado.\"",
                expectedOutcome: "Noches m√°s tranquilas. Lactancia facilitada. Beb√© y padres m√°s descansados."
            ),
            BM2Scenario(
                principleNumber: 4,
                situation: "Llora cada vez que intento hacer algo sin √©l",
                commonMistake: "\"Est√° llamando la atenci√≥n. Si le haces caso, lo vas a mal acostumbrar.\"",
                besameMuchoResponse: "\"Necesita tu presencia. Mientras es beb√©, ll√©valo contigo o h√°blale para que sepa que est√°s cerca.\"",
                expectedOutcome: "Beb√© que sabe que puede contar contigo. Menos estr√©s para ambos."
            ),
            BM2Scenario(
                principleNumber: 5,
                situation: "Llora 'por nada' seg√∫n mi familia",
                commonMistake: "\"D√©jalo llorar, est√° manipulando. Si corres cada vez que llora, te va a tomar el pelo.\"",
                besameMuchoResponse: "\"Los beb√©s no manipulan, comunican. Si llora, es porque te necesita. Responde siempre.\"",
                expectedOutcome: "Beb√© que conf√≠a en que ser√° atendido. Desarrollo de apego seguro."
            ),
            BM2Scenario(
                principleNumber: 6,
                situation: "Llora desesperadamente cuando me voy al trabajo",
                commonMistake: "\"Vete r√°pido sin que te vea, as√≠ no sufre. Si te quedas consol√°ndolo, empeora.\"",
                besameMuchoResponse: "\"Desp√≠dete siempre con amor. Dile que vas a volver. Su llanto es normal y sano, significa que te quiere.\"",
                expectedOutcome: "Ni√±o que aprende que las separaciones son temporales y que siempre vuelves."
            ),
            BM2Scenario(
                principleNumber: 7,
                situation: "Me aconsejan dejarlo llorar para que 'aprenda' a dormir",
                commonMistake: "\"D√©jalo llorar 5 minutos, luego 10, luego 15. En unos d√≠as dormir√° solo.\"",
                besameMuchoResponse: "\"Nunca dejes llorar a tu beb√©. Si llora, es porque te necesita. Acomp√°√±alo hasta que se duerma.\"",
                expectedOutcome: "Beb√© que asocia el sue√±o con seguridad, no con abandono. Mejor salud emocional."
            ),
            BM2Scenario(
                principleNumber: 8,
                situation: "¬øCu√°ndo ser√° menos dependiente? Ya tiene 2 a√±os",
                commonMistake: "\"Ya es muy grande para brazos/pecho/tu cama. Tienes que ponerle l√≠mites o nunca se har√° independiente.\"",
                besameMuchoResponse: "\"La independencia llegar√° sola. Mientras m√°s satisfagas sus necesidades ahora, m√°s seguro ser√° despu√©s.\"",
                expectedOutcome: "Ni√±o que se independiza gradualmente y con confianza, a su propio ritmo."
            ),
            BM2Scenario(
                principleNumber: 9,
                situation: "Presi√≥n familiar para que quite el pa√±al 'ya'",
                commonMistake: "\"Ya cumpli√≥ 2 a√±os, es hora de quitarle el pa√±al. Ponlo en el ba√±o cada hora hasta que aprenda.\"",
                besameMuchoResponse: "\"Esperar√© a que muestre se√±ales de estar listo. Forzarlo solo causa problemas. Cada ni√±o tiene su tiempo.\"",
                expectedOutcome: "Control de esf√≠nteres sin traumas, sin infecciones, sin regresiones."
            ),
            BM2Scenario(
                principleNumber: 10,
                situation: "A√∫n toma pecho a los 2 a√±os, me dicen que lo quite",
                commonMistake: "\"Ya es muy grande para el pecho. Le va a hacer da√±o. Debes quit√°rselo ya.\"",
                besameMuchoResponse: "\"La OMS recomienda lactancia hasta los 2 a√±os o m√°s. Lo dejaremos cuando ambos estemos preparados, sin prisa.\"",
                expectedOutcome: "Destete natural, respetuoso y sin traumas emocionales."
            ),
            BM2Scenario(
                principleNumber: 11,
                situation: "Me dicen que lo estoy malcriando con tanto amor",
                commonMistake: "\"Lo est√°s haciendo d√©bil. Tiene que aprender que no siempre puede tener lo que quiere.\"",
                besameMuchoResponse: "\"El amor nunca malcr√≠a. Los ni√±os que reciben m√°s amor son los m√°s seguros y equilibrados.\"",
                expectedOutcome: "Ni√±o con alta autoestima, seguro emocionalmente y capaz de amar."
            ),
            BM2Scenario(
                principleNumber: 12,
                situation: "Me aconsejan 'una nalgada a tiempo' para que obedezca",
                commonMistake: "\"Una bofetada a tiempo no le hace da√±o a nadie. As√≠ aprenden r√°pido.\"",
                besameMuchoResponse: "\"Nunca pegar√© a mi hijo. Los l√≠mites pueden ser firmes sin ser violentos. El respeto se ense√±a con respeto.\"",
                expectedOutcome: "Ni√±o que aprende a resolver conflictos sin violencia. V√≠nculo sano con los padres."
            )
        ]
    }
    
    private var keyIdeas: [BM2KeyIdea] {
        [
            BM2KeyIdea(
                quote: "La independencia no se ense√±a, se consigue",
                context: "Los ni√±os se vuelven independientes cuando tienen todo el apego que necesitan, no cuando se les fuerza a serlo"
            ),
            BM2KeyIdea(
                quote: "Los ni√±os no se acostumbran a llorar solos, se resignan",
                context: "El silencio despu√©s de llorar no es aprendizaje, es resignaci√≥n y trauma"
            ),
            BM2KeyIdea(
                quote: "El colecho no crea dependencia, crea seguridad",
                context: "Dormir con los padres es lo natural. La independencia llegar√° cuando el ni√±o est√© preparado"
            ),
            BM2KeyIdea(
                quote: "Tus brazos son su h√°bitat natural",
                context: "Los beb√©s humanos est√°n dise√±ados para ser portados constantemente como los primates"
            ),
            BM2KeyIdea(
                quote: "No existe el 'mal h√°bito' de mamar por la noche",
                context: "La lactancia nocturna es normal, necesaria y beneficiosa para beb√© y madre"
            ),
            BM2KeyIdea(
                quote: "La angustia de separaci√≥n es se√±al de apego sano",
                context: "Los ni√±os que lloran cuando sus padres se van tienen un v√≠nculo fuerte y saludable"
            )
        ]
    }
    
    private func colorForBlock(_ block: PrincipleBlock) -> Color {
        switch block {
        case .biologicalNeeds: return .blue
        case .communicationResponse: return .mint
        case .developmentAutonomy: return .purple
        case .respectfulParenting: return .pink
        }
    }
    
    private func triggerHaptic() {
        #if !os(macOS)
        let impactFeedback = UIImpactFeedbackGenerator(style: .light)
        impactFeedback.impactOccurred()
        #endif
    }
}

// MARK: - Preview
struct BM2View_Previews: PreviewProvider {
    static var previews: some View {
        NavigationView {
            BM2View()
        }
    }
}

